# Generated by Django 5.2.5 on 2025-08-25 08:55

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0007_add_sequencing_data_path_to_sitesettings'),
    ]

    operations = [
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='assembly_quality',
            field=models.CharField(choices=[('Many fragments with little to no review of assembly other than reporting of standard assembly statistics', 'Many fragments with little to no review of assembly other than reporting of standard assembly statistics'), ('Multiple fragments where gaps span repetitive regions. Presence of the 23S, 16S, and 5S rRNA genes and at least 18 tRNAs', 'Multiple fragments where gaps span repetitive regions. Presence of the 23S, 16S, and 5S rRNA genes and at least 18 tRNAs'), ('Single contiguous sequence without gaps or ambiguities with a consensus error rate equivalent to Q50 or better', 'Single contiguous sequence without gaps or ambiguities with a consensus error rate equivalent to Q50 or better')], help_text='The assemb', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='assembly_software',
            field=models.CharField(help_text='Tool(s) us', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='binning_parameters',
            field=models.CharField(help_text='The parame', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='binning_software',
            field=models.CharField(help_text='Tool(s) us', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not applicable$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)|(^missing$)')]),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='completeness_score',
            field=models.CharField(help_text='Completene', max_length=120, validators=[django.core.validators.RegexValidator('^(\\d|[1-9]\\d|\\d\\.\\d{1,2}|[1-9]\\d\\.\\d{1,2}|100)$')]),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='completeness_software',
            field=models.CharField(help_text='Tools used', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='contamination_score',
            field=models.CharField(help_text='The contam', max_length=120, validators=[django.core.validators.RegexValidator('^(\\d|[1-9]\\d|\\d\\.\\d{1,2}|[1-9]\\d\\.\\d{1,2}|100)$')]),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czechia', 'Czechia'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing', 'missing'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The geogra', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not applicable$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)|(^missing$)')]),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not applicable$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)|(^missing$)')]),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='isolation_source',
            field=models.CharField(help_text='describes ', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='metagenomic_source',
            field=models.CharField(help_text='The metage', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='sample_derived_from',
            field=models.CharField(help_text='Reference ', max_length=120, validators=[django.core.validators.RegexValidator('(^[ESD]R[SR]\\d{6,}(,[ESD]R[SR]\\d{6,})*$)|(^SAM[END][AG]?\\d+(,SAM[END][AG]?\\d+)*$)|(^EGA[NR]\\d{11}(,EGA[NR]\\d{11})*$)|(^[ESD]R[SR]\\d{6,}-[ESD]R[SR]\\d{6,}$)|(^SAM[END][AG]?\\d+-SAM[END][AG]?\\d+$)|(^EGA[NR]\\d{11}-EGA[NR]\\d{11}$)')]),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome',
            name='taxonomic_identity_marker',
            field=models.CharField(help_text='The phylog', max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='completeness_score',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='contamination_score',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_binned_metagenome_unit',
            name='reassembly_post_binning',
            field=models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], max_length=120),
        ),
        migrations.AlterField(
            model_name='ena_default_sample_checklist',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='ena_default_sample_checklist',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='assembly_quality',
            field=models.CharField(choices=[('Many fragments with little to no review of assembly other than reporting of standard assembly statistics', 'Many fragments with little to no review of assembly other than reporting of standard assembly statistics'), ('Multiple fragments where gaps span repetitive regions. Presence of the 23S, 16S, and 5S rRNA genes and at least 18 tRNAs', 'Multiple fragments where gaps span repetitive regions. Presence of the 23S, 16S, and 5S rRNA genes and at least 18 tRNAs'), ('Single contiguous sequence without gaps or ambiguities with a consensus error rate equivalent to Q50 or better', 'Single contiguous sequence without gaps or ambiguities with a consensus error rate equivalent to Q50 or better')], help_text='The assemb', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='assembly_software',
            field=models.CharField(help_text='Tool(s) us', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='binning_parameters',
            field=models.CharField(help_text='The parame', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='binning_software',
            field=models.CharField(help_text='Tool(s) us', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not applicable$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)|(^missing$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='completeness_score',
            field=models.CharField(help_text='Completene', max_length=120, validators=[django.core.validators.RegexValidator('^(\\d|[1-9]\\d|\\d\\.\\d{1,2}|[1-9]\\d\\.\\d{1,2}|100)$')]),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='completeness_software',
            field=models.CharField(help_text='Tools used', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='contamination_score',
            field=models.CharField(help_text='The contam', max_length=120, validators=[django.core.validators.RegexValidator('^(\\d|[1-9]\\d|\\d\\.\\d{1,2}|[1-9]\\d\\.\\d{1,2}|100)$')]),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czechia', 'Czechia'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing', 'missing'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The geogra', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not applicable$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)|(^missing$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not applicable$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)|(^missing$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='isolation_source',
            field=models.CharField(help_text='describes ', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='metagenomic_source',
            field=models.CharField(help_text='The metage', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='sample_derived_from',
            field=models.CharField(help_text='Reference ', max_length=120, validators=[django.core.validators.RegexValidator('(^[ESD]R[SR]\\d{6,}(,[ESD]R[SR]\\d{6,})*$)|(^SAM[END][AG]?\\d+(,SAM[END][AG]?\\d+)*$)|(^EGA[NR]\\d{11}(,EGA[NR]\\d{11})*$)|(^[ESD]R[SR]\\d{6,}-[ESD]R[SR]\\d{6,}$)|(^SAM[END][AG]?\\d+-SAM[END][AG]?\\d+$)|(^EGA[NR]\\d{11}-EGA[NR]\\d{11}$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mimags',
            name='taxonomic_identity_marker',
            field=models.CharField(help_text='The phylog', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='completeness_score',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='contamination_score',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mimags_unit',
            name='reassembly_post_binning',
            field=models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='altitude',
            field=models.CharField(help_text='The altitu', max_length=120, validators=[django.core.validators.RegexValidator('(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='air_particulate_matter_concentration',
            field=models.CharField(choices=[('µg/m3', 'µg/m3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='barometric_pressure',
            field=models.CharField(choices=[('Torr', 'Torr'), ('in. Hg', 'in. Hg'), ('millibar(hPa)', 'millibar(hPa)'), ('mm Hg', 'mm Hg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='carbon_dioxide',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='carbon_monoxide',
            field=models.CharField(choices=[('µM/L', 'µM/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='humidity',
            field=models.CharField(choices=[('%', '%'), ('g/m3', 'g/m3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='methane',
            field=models.CharField(choices=[('µM/L', 'µM/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='oxygen',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('parts/million', 'parts/million')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='pollutants',
            field=models.CharField(choices=[('M/L', 'M/L'), ('g', 'g'), ('mg/L', 'mg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='solar_irradiance',
            field=models.CharField(choices=[('W/m2', 'W/m2')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='ventilation_rate',
            field=models.CharField(choices=[('L/sec', 'L/sec'), ('m3/min', 'm3/min')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='volatile_organic_compounds',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µg/m3', 'µg/m3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_air_unit',
            name='wind_speed',
            field=models.CharField(choices=[('km/h', 'km/h'), ('m/s', 'm/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_age',
            field=models.CharField(choices=[('centuries', 'centuries'), ('days', 'days'), ('decades', 'decades'), ('hours', 'hours'), ('minutes', 'minutes'), ('months', 'months'), ('seconds', 'seconds'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_blood_pressure_diastolic',
            field=models.CharField(choices=[('mm Hg', 'mm Hg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_blood_pressure_systolic',
            field=models.CharField(choices=[('mm Hg', 'mm Hg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_body_temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_dry_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('mg', 'mg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_height',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_length',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='host_total_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_host_associated_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='host_age',
            field=models.CharField(choices=[('centuries', 'centuries'), ('days', 'days'), ('decades', 'decades'), ('hours', 'hours'), ('minutes', 'minutes'), ('months', 'months'), ('seconds', 'seconds'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='host_body_mass_index',
            field=models.CharField(choices=[('kg/m2', 'kg/m2')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='host_body_temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='host_height',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='host_pulse',
            field=models.CharField(choices=[('bpm', 'bpm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='host_total_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_associated_unit',
            name='weight_loss_in_last_three_months',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='host_age',
            field=models.CharField(choices=[('centuries', 'centuries'), ('days', 'days'), ('decades', 'decades'), ('hours', 'hours'), ('minutes', 'minutes'), ('months', 'months'), ('seconds', 'seconds'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='host_body_mass_index',
            field=models.CharField(choices=[('kg/m2', 'kg/m2')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='host_body_temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='host_height',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='host_pulse',
            field=models.CharField(choices=[('bpm', 'bpm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='host_total_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_gut_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='host_age',
            field=models.CharField(choices=[('centuries', 'centuries'), ('days', 'days'), ('decades', 'decades'), ('hours', 'hours'), ('minutes', 'minutes'), ('months', 'months'), ('seconds', 'seconds'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='host_body_mass_index',
            field=models.CharField(choices=[('kg/m2', 'kg/m2')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='host_body_temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='host_height',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='host_pulse',
            field=models.CharField(choices=[('bpm', 'bpm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='host_total_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_oral_unit',
            name='time_since_last_toothbrushing',
            field=models.CharField(choices=[('hours', 'hours'), ('minutes', 'minutes')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='host_age',
            field=models.CharField(choices=[('centuries', 'centuries'), ('days', 'days'), ('decades', 'decades'), ('hours', 'hours'), ('minutes', 'minutes'), ('months', 'months'), ('seconds', 'seconds'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='host_body_mass_index',
            field=models.CharField(choices=[('kg/m2', 'kg/m2')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='host_body_temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='host_height',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='host_pulse',
            field=models.CharField(choices=[('bpm', 'bpm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='host_total_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_skin_unit',
            name='time_since_last_wash',
            field=models.CharField(choices=[('hours', 'hours'), ('minutes', 'minutes')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='host_age',
            field=models.CharField(choices=[('centuries', 'centuries'), ('days', 'days'), ('decades', 'decades'), ('hours', 'hours'), ('minutes', 'minutes'), ('months', 'months'), ('seconds', 'seconds'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='host_body_mass_index',
            field=models.CharField(choices=[('kg/m2', 'kg/m2')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='host_body_temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='host_height',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='host_pulse',
            field=models.CharField(choices=[('bpm', 'bpm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='host_total_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_human_vaginal_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='depth',
            field=models.CharField(help_text='The vertic', max_length=120, validators=[django.core.validators.RegexValidator('(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='elevation',
            field=models.CharField(help_text='The elevat', max_length=120, validators=[django.core.validators.RegexValidator('[+-]?(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='alkalinity',
            field=models.CharField(choices=[('mEq/L', 'mEq/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='alkyl_diethers',
            field=models.CharField(choices=[('M/L', 'M/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='aminopeptidase_activity',
            field=models.CharField(choices=[('mol/L/h', 'mol/L/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='ammonium',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='bacterial_carbon_production',
            field=models.CharField(choices=[('ng/h', 'ng/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='biomass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('t', 't')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='bishomohopanol',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µg/g', 'µg/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='bromide',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='calcium',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='chloride',
            field=models.CharField(choices=[('mg/L', 'mg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='chlorophyll',
            field=models.CharField(choices=[('mg/m3', 'mg/m3'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='diether_lipids',
            field=models.CharField(choices=[('ng/L', 'ng/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='dissolved_carbon_dioxide',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='dissolved_hydrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='dissolved_inorganic_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='dissolved_organic_carbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='dissolved_organic_nitrogen',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='dissolved_oxygen',
            field=models.CharField(choices=[('µmol/kg', 'µmol/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='glucosidase_activity',
            field=models.CharField(choices=[('mol/L/h', 'mol/L/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='magnesium',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('mol/L', 'mol/L'), ('parts/million', 'parts/million')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='mean_friction_velocity',
            field=models.CharField(choices=[('m/s', 'm/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='mean_peak_friction_velocity',
            field=models.CharField(choices=[('m/s', 'm/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='methane',
            field=models.CharField(choices=[('µM/L', 'µM/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='n_alkanes',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='nitrate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='nitrite',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='nitrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='organic_carbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='organic_matter',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='organic_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='particulate_organic_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='petroleum_hydrocarbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='phaeopigments',
            field=models.CharField(choices=[('mg/m3', 'mg/m3'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='phosphate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='phospholipid_fatty_acid',
            field=models.CharField(choices=[('mol/L', 'mol/L'), ('mol/g', 'mol/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='potassium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='pressure',
            field=models.CharField(choices=[('atm', 'atm'), ('bar', 'bar')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='redox_potential',
            field=models.CharField(choices=[('mV', 'mV')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='silicate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='sodium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='sulfate',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='sulfide',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='total_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='total_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='total_organic_carbon',
            field=models.CharField(choices=[('g/kg', 'g/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='turbidity',
            field=models.CharField(choices=[('FTU', 'FTU'), ('NTU', 'NTU')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_microbial_mat_biolfilm_unit',
            name='water_content',
            field=models.CharField(choices=[('cm3/cm3', 'cm3/cm3'), ('g/g', 'g/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='alkalinity',
            field=models.CharField(choices=[('mEq/L', 'mEq/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='ammonium',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='biomass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('t', 't')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='bromide',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='calcium',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='chloride',
            field=models.CharField(choices=[('mg/L', 'mg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='chlorophyll',
            field=models.CharField(choices=[('mg/m3', 'mg/m3'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='density',
            field=models.CharField(choices=[('g/m3', 'g/m3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='diether_lipids',
            field=models.CharField(choices=[('ng/L', 'ng/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='dissolved_carbon_dioxide',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='dissolved_hydrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='dissolved_inorganic_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='dissolved_organic_nitrogen',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='dissolved_oxygen',
            field=models.CharField(choices=[('µmol/kg', 'µmol/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='nitrate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='nitrite',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='nitrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='organic_carbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='organic_matter',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='organic_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='phosphate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='phospholipid_fatty_acid',
            field=models.CharField(choices=[('mol/L', 'mol/L'), ('mol/g', 'mol/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='potassium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='pressure',
            field=models.CharField(choices=[('atm', 'atm'), ('bar', 'bar')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='silicate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='sodium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='sulfate',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='sulfide',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_miscellaneous_natural_or_artificial_environment_unit',
            name='water_current',
            field=models.CharField(choices=[('knot', 'knot'), ('m3/s', 'm3/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='host_age',
            field=models.CharField(choices=[('centuries', 'centuries'), ('days', 'days'), ('decades', 'decades'), ('hours', 'hours'), ('minutes', 'minutes'), ('months', 'months'), ('seconds', 'seconds'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='host_dry_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('mg', 'mg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='host_height',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='host_length',
            field=models.CharField(choices=[('cm', 'cm'), ('m', 'm'), ('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='host_total_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='host_wet_mass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('mg', 'mg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_plant_associated_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='depth',
            field=models.CharField(help_text='The vertic', max_length=120, validators=[django.core.validators.RegexValidator('(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='elevation',
            field=models.CharField(help_text='The elevat', max_length=120, validators=[django.core.validators.RegexValidator('[+-]?(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='alkyl_diethers',
            field=models.CharField(choices=[('M/L', 'M/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='aminopeptidase_activity',
            field=models.CharField(choices=[('mol/L/h', 'mol/L/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='ammonium',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='bacterial_carbon_production',
            field=models.CharField(choices=[('ng/h', 'ng/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='biomass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('t', 't')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='bishomohopanol',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µg/g', 'µg/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='bromide',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='calcium',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='chloride',
            field=models.CharField(choices=[('mg/L', 'mg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='chlorophyll',
            field=models.CharField(choices=[('mg/m3', 'mg/m3'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='density',
            field=models.CharField(choices=[('g/m3', 'g/m3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='diether_lipids',
            field=models.CharField(choices=[('ng/L', 'ng/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='dissolved_carbon_dioxide',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='dissolved_hydrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='dissolved_inorganic_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='dissolved_organic_carbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='dissolved_organic_nitrogen',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='dissolved_oxygen',
            field=models.CharField(choices=[('µmol/kg', 'µmol/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='glucosidase_activity',
            field=models.CharField(choices=[('mol/L/h', 'mol/L/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='magnesium',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('mol/L', 'mol/L'), ('parts/million', 'parts/million')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='methane',
            field=models.CharField(choices=[('µM/L', 'µM/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='n_alkanes',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='nitrate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='nitrite',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='nitrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='organic_carbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='organic_matter',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='organic_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='particulate_organic_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='petroleum_hydrocarbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='phaeopigments',
            field=models.CharField(choices=[('mg/m3', 'mg/m3'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='phosphate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='phospholipid_fatty_acid',
            field=models.CharField(choices=[('mol/L', 'mol/L'), ('mol/g', 'mol/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='potassium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='redox_potential',
            field=models.CharField(choices=[('mV', 'mV')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='silicate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='sodium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='sulfate',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='sulfide',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='total_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='total_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='total_organic_carbon',
            field=models.CharField(choices=[('g/kg', 'g/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_sediment_unit',
            name='water_content',
            field=models.CharField(choices=[('cm3/cm3', 'cm3/cm3'), ('g/g', 'g/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='depth',
            field=models.CharField(help_text='The vertic', max_length=120, validators=[django.core.validators.RegexValidator('(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='elevation',
            field=models.CharField(help_text='The elevat', max_length=120, validators=[django.core.validators.RegexValidator('[+-]?(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='extreme_unusual_properties_Al_saturation',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='mean_annual_and_seasonal_precipitation',
            field=models.CharField(choices=[('mm', 'mm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='mean_annual_and_seasonal_temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='microbial_biomass',
            field=models.CharField(choices=[('g/kg', 'g/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='organic_matter',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='sample_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='slope_gradient',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='soil_texture_measurement',
            field=models.CharField(choices=[('% sand/silt/clay', '% sand/silt/clay')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='total_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='total_organic_carbon',
            field=models.CharField(choices=[('g/kg', 'g/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_soil_unit',
            name='water_content',
            field=models.CharField(choices=[('cm3/cm3', 'cm3/cm3'), ('g/g', 'g/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(\\/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='alkalinity',
            field=models.CharField(choices=[('mEq/L', 'mEq/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='biochemical_oxygen_demand',
            field=models.CharField(choices=[('mg/L (over 5 days at 20C)', 'mg/L (over 5 days at 20C)')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='chemical_oxygen_demand',
            field=models.CharField(choices=[('mg/L (over 5 days at 20C)', 'mg/L (over 5 days at 20C)')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='efficiency_percent',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='emulsions',
            field=models.CharField(choices=[('g/L', 'g/L'), ('ng/L', 'ng/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='gaseous_substances',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='industrial_effluent_percent',
            field=models.CharField(choices=[('%', '%')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='inorganic_particles',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('mol/L', 'mol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='nitrate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='organic_particles',
            field=models.CharField(choices=[('g/L', 'g/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='phosphate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='sludge_retention_time',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('minutes', 'minutes'), ('weeks', 'weeks')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='sodium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='soluble_inorganic_material',
            field=models.CharField(choices=[('g/L', 'g/L'), ('mol/L', 'mol/L'), ('parts/million', 'parts/million')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='soluble_organic_material',
            field=models.CharField(choices=[('g/L', 'g/L'), ('mol/L', 'mol/L'), ('parts/million', 'parts/million')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='suspended_solids',
            field=models.CharField(choices=[('g/L', 'g/L'), ('mol/L', 'mol/L'), ('parts/million', 'parts/million')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='total_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_wastewater_sludge_unit',
            name='total_phosphate',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='broad_scale_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='collection_date',
            field=models.CharField(help_text='The date t', max_length=120, validators=[django.core.validators.RegexValidator('(^[12][0-9]{3}(-(0[1-9]|1[0-2])(-(0[1-9]|[12][0-9]|3[01])(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?(/[0-9]{4}(-[0-9]{2}(-[0-9]{2}(T[0-9]{2}:[0-9]{2}(:[0-9]{2})?Z?([+-][0-9]{1,2})?)?)?)?)?$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='depth',
            field=models.CharField(help_text='The vertic', max_length=120, validators=[django.core.validators.RegexValidator('(0|((0\\.)|([1-9][0-9]*\\.?))[0-9]*)([Ee][+-]?[0-9]+)?')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='environmental_medium',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='geographic_location_country_and_or_sea',
            field=models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Arctic Ocean', 'Arctic Ocean'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Ashmore and Cartier Islands', 'Ashmore and Cartier Islands'), ('Atlantic Ocean', 'Atlantic Ocean'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Baker Island', 'Baker Island'), ('Baltic Sea', 'Baltic Sea'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Bassas da India', 'Bassas da India'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Borneo', 'Borneo'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Clipperton Island', 'Clipperton Island'), ('Cocos Islands', 'Cocos Islands'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Cook Islands', 'Cook Islands'), ('Coral Sea Islands', 'Coral Sea Islands'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Democratic Republic of the Congo', 'Democratic Republic of the Congo'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Europa Island', 'Europa Island'), ('Falkland Islands (Islas Malvinas)', 'Falkland Islands (Islas Malvinas)'), ('Faroe Islands', 'Faroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern and Antarctic Lands', 'French Southern and Antarctic Lands'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Gaza Strip', 'Gaza Strip'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Glorioso Islands', 'Glorioso Islands'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Howland Island', 'Howland Island'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indian Ocean', 'Indian Ocean'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Jan Mayen', 'Jan Mayen'), ('Japan', 'Japan'), ('Jarvis Island', 'Jarvis Island'), ('Jersey', 'Jersey'), ('Johnston Atoll', 'Johnston Atoll'), ('Jordan', 'Jordan'), ('Juan de Nova Island', 'Juan de Nova Island'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kerguelen Archipelago', 'Kerguelen Archipelago'), ('Kingman Reef', 'Kingman Reef'), ('Kiribati', 'Kiribati'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mediterranean Sea', 'Mediterranean Sea'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Midway Islands', 'Midway Islands'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Navassa Island', 'Navassa Island'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Sea', 'North Sea'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pacific Ocean', 'Pacific Ocean'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palmyra Atoll', 'Palmyra Atoll'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paracel Islands', 'Paracel Islands'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Pitcairn Islands', 'Pitcairn Islands'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of the Congo', 'Republic of the Congo'), ('Reunion', 'Reunion'), ('Romania', 'Romania'), ('Ross Sea', 'Ross Sea'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Korea', 'South Korea'), ('Southern Ocean', 'Southern Ocean'), ('Spain', 'Spain'), ('Spratly Islands', 'Spratly Islands'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Svalbard', 'Svalbard'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Tasman Sea', 'Tasman Sea'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tromelin Island', 'Tromelin Island'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands', 'Turks and Caicos Islands'), ('Tuvalu', 'Tuvalu'), ('USA', 'USA'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands', 'Virgin Islands'), ('Wake Island', 'Wake Island'), ('Wallis and Futuna', 'Wallis and Futuna'), ('West Bank', 'West Bank'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('missing: control sample', 'missing: control sample'), ('missing: data agreement established pre-2023', 'missing: data agreement established pre-2023'), ('missing: endangered species', 'missing: endangered species'), ('missing: human-identifiable', 'missing: human-identifiable'), ('missing: lab stock', 'missing: lab stock'), ('missing: sample group', 'missing: sample group'), ('missing: synthetic construct', 'missing: synthetic construct'), ('missing: third party data', 'missing: third party data'), ('not applicable', 'not applicable'), ('not collected', 'not collected'), ('not provided', 'not provided'), ('restricted access', 'restricted access')], help_text='The locati', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='geographic_location_latitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='geographic_location_longitude',
            field=models.CharField(help_text='The geogra', max_length=120, validators=[django.core.validators.RegexValidator('(^[+-]?[0-9]+.?[0-9]{0,8}$)|(^not collected$)|(^not provided$)|(^restricted access$)|(^missing: control sample$)|(^missing: sample group$)|(^missing: synthetic construct$)|(^missing: lab stock$)|(^missing: third party data$)|(^missing: data agreement established pre-2023$)|(^missing: endangered species$)|(^missing: human-identifiable$)')]),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='local_environmental_context',
            field=models.CharField(help_text='Report the', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water',
            name='project_name',
            field=models.CharField(help_text='Name of th', max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='alkalinity',
            field=models.CharField(choices=[('mEq/L', 'mEq/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='alkyl_diethers',
            field=models.CharField(choices=[('M/L', 'M/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='altitude',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='aminopeptidase_activity',
            field=models.CharField(choices=[('mol/L/h', 'mol/L/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='ammonium',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='amount_or_size_of_sample_collected',
            field=models.CharField(choices=[('L', 'L'), ('g', 'g'), ('kg', 'kg'), ('m2', 'm2'), ('m3', 'm3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='bacterial_carbon_production',
            field=models.CharField(choices=[('ng/h', 'ng/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='bacterial_production',
            field=models.CharField(choices=[('mg/m3/d', 'mg/m3/d')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='bacterial_respiration',
            field=models.CharField(choices=[('mg/m3/d', 'mg/m3/d')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='biomass',
            field=models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('t', 't')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='bishomohopanol',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µg/g', 'µg/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='bromide',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='calcium',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='chloride',
            field=models.CharField(choices=[('mg/L', 'mg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='chlorophyll',
            field=models.CharField(choices=[('mg/m3', 'mg/m3'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='conductivity',
            field=models.CharField(choices=[('mS/cm', 'mS/cm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='density',
            field=models.CharField(choices=[('g/m3', 'g/m3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='depth',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='diether_lipids',
            field=models.CharField(choices=[('ng/L', 'ng/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_carbon_dioxide',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_hydrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_inorganic_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_inorganic_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_inorganic_phosphorus',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_organic_carbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_organic_nitrogen',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='dissolved_oxygen',
            field=models.CharField(choices=[('µmol/kg', 'µmol/kg')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='downward_PAR',
            field=models.CharField(choices=[('µE/m2/s', 'µE/m2/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='elevation',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='fluorescence',
            field=models.CharField(choices=[('V', 'V'), ('mg Chla/m3', 'mg Chla/m3')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='geographic_location_latitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='geographic_location_longitude',
            field=models.CharField(choices=[('DD', 'DD')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='glucosidase_activity',
            field=models.CharField(choices=[('mol/L/h', 'mol/L/h')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='light_intensity',
            field=models.CharField(choices=[('lux', 'lux')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='magnesium',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('mol/L', 'mol/L'), ('parts/million', 'parts/million')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='mean_friction_velocity',
            field=models.CharField(choices=[('m/s', 'm/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='mean_peak_friction_velocity',
            field=models.CharField(choices=[('m/s', 'm/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='n_alkanes',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='nitrate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='nitrite',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='nitrogen',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='organic_carbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='organic_matter',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='organic_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='particulate_organic_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='particulate_organic_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='petroleum_hydrocarbon',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='phaeopigments',
            field=models.CharField(choices=[('mg/m3', 'mg/m3'), ('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='phosphate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='phospholipid_fatty_acid',
            field=models.CharField(choices=[('mol/L', 'mol/L'), ('mol/g', 'mol/g')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='photon_flux',
            field=models.CharField(choices=[('µmol/m2/s', 'µmol/m2/s')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='potassium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='pressure',
            field=models.CharField(choices=[('atm', 'atm'), ('bar', 'bar')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='primary_production',
            field=models.CharField(choices=[('g/m2/day', 'g/m2/day'), ('mg/m3/day', 'mg/m3/day')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='redox_potential',
            field=models.CharField(choices=[('mV', 'mV')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='salinity',
            field=models.CharField(choices=[('psu', 'psu')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='sample_storage_duration',
            field=models.CharField(choices=[('days', 'days'), ('hours', 'hours'), ('months', 'months'), ('weeks', 'weeks'), ('years', 'years')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='sample_storage_temperature',
            field=models.CharField(choices=[('°C', '°C')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='sample_volume_or_weight_for_DNA_extraction',
            field=models.CharField(choices=[('g', 'g'), ('mL', 'mL'), ('mg', 'mg'), ('ng', 'ng')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='silicate',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='sodium',
            field=models.CharField(choices=[('parts/million', 'parts/million'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='soluble_reactive_phosphorus',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='sulfate',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='sulfide',
            field=models.CharField(choices=[('mg/L', 'mg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='suspended_particulate_matter',
            field=models.CharField(choices=[('mg/L', 'mg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='temperature',
            field=models.CharField(choices=[('ºC', 'ºC')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='total_depth_of_water_column',
            field=models.CharField(choices=[('m', 'm')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='total_dissolved_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='total_inorganic_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='total_nitrogen',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='total_particulate_carbon',
            field=models.CharField(choices=[('µg/L', 'µg/L'), ('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='total_phosphorus',
            field=models.CharField(choices=[('µmol/L', 'µmol/L')], max_length=120),
        ),
        migrations.AlterField(
            model_name='gsc_mixs_water_unit',
            name='water_current',
            field=models.CharField(choices=[('knot', 'knot'), ('m3/s', 'm3/s')], max_length=120),
        ),
    ]
